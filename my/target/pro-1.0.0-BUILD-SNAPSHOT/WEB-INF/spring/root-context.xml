<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!--		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>-->
		<!--		<property name="url" value="jdbc:log4jdbc:mysql://localhost:3306/springbasic?useUnicode=true&amp;characterEncoding=utf8"></property>-->
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/project?useUnicode=true&amp;characterEncoding=utf8"></property>
		<property name="username" value="jjs"></property>
		<property name="password" value="1q2w3e4r"></property>
	</bean>

	<!--mybatis 부분 Mapper : sql문 집합-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation"  value="classpath:mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath*:mapper/*Mapper.xml"/>
	</bean>


	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>


	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!--트랜젝션을 어노테이션으로 서용하는 xml설정-->
	<tx:annotation-driven/>

<!--	&lt;!&ndash; 트랜잭션 어드바이스 셋팅!&ndash;&gt;-->
<!--	<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
<!--		<tx:attributes>-->
<!--			<tx:method name="get*" read-only="true"/> &lt;!&ndash;get으로 시작하는 모든메소드는 읽기 , 트렌젝션에서 제외된다.&ndash;&gt;-->
<!--			<tx:method name="*"/> &lt;!&ndash;그외 모든 메소드는 트렌적션처리 됨.&ndash;&gt;-->
<!-- 		</tx:attributes>-->
<!--	</tx:advice>-->
<!--	&lt;!&ndash;어드바이스 세팅 끝&ndash;&gt;-->

<!--	&lt;!&ndash;트렌잭션이 처리될 포인트컷지정 : 트랜잭션을 처리할 필터링된 메소드.&ndash;&gt;-->
<!--	<aop:config>-->
<!--		<aop:pointcut id="txPointcut" expression="execution(* com.my.pro.. *(..))"/>-->
<!--		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>-->
<!--	</aop:config>-->


	<context:component-scan base-package="com.my.pro"/>

</beans>
